{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ap75r\\\\OneDrive\\\\Desktop\\\\Proj\\\\sepm project\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // For admin user, we'll just set the user state\n      setCurrentUser({\n        email: 'admin',\n        role: 'admin'\n      });\n      setIsAuthenticated(true);\n      setLoading(false);\n    } else {\n      setIsAuthenticated(false);\n      setLoading(false);\n    }\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Check for admin credentials\n      if (email === 'admin' && password === 'admin') {\n        const token = 'admin-token'; // Simple token for admin\n        localStorage.setItem('token', token);\n        setCurrentUser({\n          email: 'admin',\n          role: 'admin'\n        });\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid credentials'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      // For now, we'll only allow admin registration\n      if (userData.email === 'admin' && userData.password === 'admin') {\n        const token = 'admin-token';\n        localStorage.setItem('token', token);\n        setCurrentUser({\n          email: 'admin',\n          role: 'admin'\n        });\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      }\n      return {\n        success: false,\n        error: 'Only admin registration is allowed'\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"SPrStg54O3wVubz+E5eVlYTUFHA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","email","role","login","password","setItem","success","error","message","register","userData","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ap75r/OneDrive/Desktop/Proj/sepm project/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      // For admin user, we'll just set the user state\r\n      setCurrentUser({ email: 'admin', role: 'admin' });\r\n      setIsAuthenticated(true);\r\n      setLoading(false);\r\n    } else {\r\n      setIsAuthenticated(false);\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Check for admin credentials\r\n      if (email === 'admin' && password === 'admin') {\r\n        const token = 'admin-token'; // Simple token for admin\r\n        localStorage.setItem('token', token);\r\n        setCurrentUser({ email: 'admin', role: 'admin' });\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      }\r\n      return { success: false, error: 'Invalid credentials' };\r\n    } catch (error) {\r\n      return { success: false, error: error.message || 'Login failed' };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      // For now, we'll only allow admin registration\r\n      if (userData.email === 'admin' && userData.password === 'admin') {\r\n        const token = 'admin-token';\r\n        localStorage.setItem('token', token);\r\n        setCurrentUser({ email: 'admin', role: 'admin' });\r\n        setIsAuthenticated(true);\r\n        return { success: true };\r\n      }\r\n      return { success: false, error: 'Only admin registration is allowed' };\r\n    } catch (error) {\r\n      return { success: false, error: error.message || 'Registration failed' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}